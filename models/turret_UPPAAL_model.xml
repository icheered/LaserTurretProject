<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
clock a, v, t, t2;
double angle;
</declaration>
	<template>
		<name x="5" y="5">Template</name>
		<declaration>// Place local declarations here.</declaration>
		<location id="id0" x="-340" y="-136">
			<label kind="invariant" x="-350" y="-119">t&lt;=0.1 &amp;&amp;
v' == 0 &amp;&amp;
a' == 0</label>
		</location>
		<location id="id1" x="-136" y="-136">
			<name x="-187" y="-187">accelerate</name>
			<label kind="invariant" x="-146" y="-119">v' == 16.2 &amp;&amp;
a' == 1*v &amp;&amp;
a &lt;=(0.5*angle)</label>
		</location>
		<location id="id2" x="-8" y="-136">
		</location>
		<location id="id3" x="-8" y="-136">
			<name x="-18" y="-170">decelerate</name>
			<label kind="invariant" x="-18" y="-119">v' == -16.2 &amp;&amp;
a' == 1*v &amp;&amp;
a &lt;= angle</label>
		</location>
		<location id="id4" x="195" y="-136">
			<name x="185" y="-170">aiming</name>
			<label kind="invariant" x="185" y="-119">t2 &lt;= 0.3125</label>
		</location>
		<location id="id5" x="357" y="-136">
			<name x="347" y="-170">Finished</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="68" y="-153">a&gt;=angle</label>
			<label kind="assignment" x="76" y="-136">t2=0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="guard" x="-127" y="-170">a&gt;= (0.5*angle)</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="assignment" x="-365" y="-195">a=0,
angle = random(1.57) + 1.57</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = Template();
// List one or more processes to be composed into a system.
system Process;
    </system>
	<queries>
		<query>
			<formula>simulate [&lt;=10] {a}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=10; 10000] (&lt;&gt; Template.Finished)</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
